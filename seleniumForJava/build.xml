<?xml version="1.0" encoding="UTF-8" ?>
<project name="seleniumForJava" default="makeJar" basedir=".">
	<!--
		定数の定義。
		build.xml上で使用する定数を定義する。
	-->
	<!--
		ビルドのベースディレクトリ。
		何もなければ${basedir}を使っても問題ありませんが、
		他プロジェクトのbuild.xmlからこのbuild.xmlのタスクを呼び出したとき、
		basedirがずれてしまうことがあるので、別に定義しておく。
	-->
	<dirname property="base" file="${ant.file}" />

	<!-- JARファイル名 -->
	<property name="jarname" value="seleniumForJava" />

	<!-- ビルド成果物ディレクトリ -->
	<property name="dir.target" value="build" />
	<property name="dir.target.classes" value="${dir.target}/classes" />
	<!--<property name="dir.target.resources" value="${dir.target}/resources" /> -->
	<property name="dir.target.dependency" value="${base}/${dir.target}/lib" />
	
	<!-- srcディレクトリ -->
	<property name="dir.src" value="src" />

	<!-- リソースファイルディレクトリ 
	<property name="dir.resources" value="resources" />-->

	<!-- libディレクトリ -->
	<property name="dir.comLib" value="WebContent/WEB-INF/commlib" />
	<property name="dir.selenmLib" value="WebContent/WEB-INF/selenium-java-4.2.2"/>
	<property name="dir.selenmSubLib" value="WebContent/WEB-INF/selenium-java-4.2.2/lib"/>

	<!-- ソースファイルエンコード -->
	<property name="src.enc" value="UTF-8" />

	<!--
		クラスパスの設定。
		必要ライブラリの配置してあるパスをクラスパスに通す。
	-->
	<path id="build.lib">
		<fileset dir="${basedir}">
			<include name="${dir.comLib}/** .jar"/>
			<include name="${dir.selenmLib}/** .jar"/>
			<include name="${dir.selenmSubLibs}/** .jar"/>
		</fileset>		
	</path>

	<!-- JARファイル作成(開発用) -->
	<target name="makeJar" description="開発用JARファイル作成">
		<!-- 作業用ディレクトリのcleanup 
		<antcall target="clean" />
		<antcall target="compile" />-->
		<echo message="JARファイルを作成します。" />
		<jar basedir="${dir.target.classes}" destfile="${base}/${dir.target}/${jarname}.jar" />
		<antcall target="filecopy">
			<!-- <param name="dir.env" value="${dir.resources}" />-->
		</antcall>
	</target>

	<!-- クラスファイル以外の必要なファイルのコピー -->
	<target name="filecopy" description="クラスファイル以外の必要なファイルのコピー">
		<echo message="クラスファイル以外の必要なファイルのコピーを行います。" />

		<!-- 古いファイルを削除 
		<delete file="${dir.target.resources}/*" />
		<delete file="${dir.target.dependency}/*" />-->

		<!-- 新しいフォルダを作成 
		<mkdir dir="${dir.target.resources}" />-->
		<mkdir dir="${dir.target.dependency}" />

		<!-- resourceファイルをコピー 
		<copy todir="${dir.target}">
			<fileset dir="${dir.env}">
				<include name="*" />
			</fileset>
		</copy> -->

		<!-- 依存性のあるファイルをコピー -->
		<copy todir="${dir.target.dependency}">
			<fileset dir="${dir.comLib}">
				<include name="*" />
			</fileset>
			<fileset dir="${dir.selenmLib}">
				<include name="*" />
			</fileset>
			<fileset dir="${dir.selenmSubLib}">
				<include name="*" />
			</fileset>
		</copy>
	</target>

	<!-- コンパイル -->
	<target name="compile" description="コンパイル">
		<echo message="コンパイルを開始します。" />
		<mkdir dir="${dir.target.classes}" />
		<javac classpathref="build.lib" srcdir="${dir.src}" destdir="${dir.target.classes}" encoding="${src.enc}" source="1.8" target="1.8" includeAntRuntime="false" debug="true" />
	</target>

	<!-- ビルド成果物削除 -->
	<target name="clean" description="ビルド成果物削除">
		<delete dir="${dir.target}" />
	</target>
</project>